name: Generate routing rules for Surge
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "custom_tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "custom_private=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> $GITHUB_ENV
          echo "lieber_reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "lieber_proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "lieber_direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "lieber_gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "lieber_greatfire=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/greatfire.txt" >> $GITHUB_ENV
          echo "felixonmars_apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "felixonmars_google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "ipipnet_chinaiplist=https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the default branch
        uses: actions/checkout@v2.3.4

      - name: Generate icloud.txt file
        run: |
          curl -sSL ${custom_icloud} | grep -E "^full:" | awk -F ':' '{printf "host, %s, direct\n", $2}' > icloud.txt
          curl -sSL ${custom_icloud} | grep -E "^domain:" | awk -F ':' '{printf "host-suffix, %s, direct\n", $2}' >> icloud.txt

      - name: Generate google.txt file
        run: |
          curl -sSL ${felixonmars_google} | perl -ne '/^server=\/([^\/]+)\// && print "host-suffix, $1, direct\n"' > google.txt

      - name: Generate apple.txt file
        run: |
          curl -sSL ${felixonmars_apple} | perl -ne '/^server=\/([^\/]+)\// && print "host-suffix, $1, direct\n"' > apple.txt

      - name: Generate direct.txt file
        run: |
          curl -sSL ${lieber_direct} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host, $2, direct\n"' > direct.txt
          curl -sSL ${lieber_direct} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host-suffix, $2, direct\n"' >> direct.txt

      - name: Generate proxy.txt file
        run: |
          curl -sSL ${lieber_proxy} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host, $2, proxy\n"' > proxy.txt
          curl -sSL ${lieber_proxy} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host-suffix, $2, proxy\n"' >> proxy.txt

      - name: Generate reject.txt file
        run: |
          curl -sSL ${lieber_reject} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host-suffix, $2, reject\n"' > reject.txt

      - name: Generate private.txt file
        run: |
          curl -sSL ${custom_private} | awk -F ':' '/^full:/ {printf "host, %s, direct\n", $2}' > private.txt
          curl -sSL ${custom_private} | awk -F ':' '/^domain:/ {printf "host-suffix, %s, direct\n", $2}' >> private.txt

      - name: Generate gfw.txt file
        run: |
          curl -sSL ${lieber_gfw} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host-suffix, $2, proxy\n"' > gfw.txt

      - name: Generate greatfire.txt file
        run: |
          curl -sSL ${lieber_greatfire} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "host-suffix, $2, proxy\n"' > greatfire.txt

      - name: Generate tld-not-cn.txt file
        run: |
          curl -sSL ${custom_tld_not_cn} | grep -E "^domain:" | awk -F ':' '{printf "host-suffix, %s, proxy\n", $2}' > tld-not-cn.txt

      - name: Generate cncidr.txt file
        run: |
          curl -sSL ${ipipnet_chinaiplist} | perl -ne '/^(\d{1,3}(\.\d{1,3}){3}\/\d{1,2})/ && print "ip-cidr, $1, direct\n"' > cncidr.txt

      - name: Generate telegramcidr.txt file
        run: |
          cp parts/telegram_ips.txt telegramcidr.txt
          curl -sSL ${telegram_cidr} | perl -ne '/^(\d{1,3}(\.\d{1,3}){3}\/\d{1,2})/ && print "ip-cidr, $1, proxy\n"' >> telegramcidr.txt
          curl -sSL ${telegram_cidr} | grep ":" | perl -ne '/(.+\/\d+)/ && print "ip6-cidr, $1, proxy\n"' >> telegramcidr.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          install -p {apple,icloud,google,proxy,direct,reject,private,gfw,greatfire,tld-not-cn,cncidr,telegramcidr}.txt ./publish/

      - name: Push artifacts to release branch
        run: |
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git fetch
          git checkout release
          git checkout --orphan release-orphan
          git rm -rf .
          cp -rf publish/. ./
          git add .
          git commit -am "Updated at $(date)"
          git branch -D release
          git branch -m release
              
      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          branch: release
          force: true

      - name: Purge CDN Cache
        run: curl -sSL  ${{ secrets.PURGE_URL }}
