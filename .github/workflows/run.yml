name: Generate routing rules for Quntumult X
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "custom_tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "custom_private=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> $GITHUB_ENV
          echo "lieber_reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "lieber_proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "lieber_direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "all_direct=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaTest/ChinaTest.list" >> $GITHUB_ENV
          echo "ACL4SSR_ChinaDomain=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list" >> $GITHUB_ENV
          echo "lieber_gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "lieber_greatfire=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/greatfire.txt" >> $GITHUB_ENV
          echo "felixonmars_apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "felixonmars_google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "ipipnet_chinaiplist=https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
          echo "lieber_reject_anti=https://anti-ad.net/surge.txt" >> $GITHUB_ENV
          echo "acl2ssr_banad=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list" >> $GITHUB_ENV
          echo "acl2ssr_BanProgramAD=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list" >> $GITHUB_ENV
          echo "acl2ssr_BanEasyList=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyList.list" >> $GITHUB_ENV
          echo "acl2ssr_BanEasyListChina=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyListChina.list" >> $GITHUB_ENV
          echo "acl2ssr_BanEasyPrivacy=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyPrivacy.list" >> $GITHUB_ENV
          echo "NobyDa_AdRule=https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/AdRule.list" >> $GITHUB_ENV
          echo "NobyDa_AdRuleTest=https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/AdRuleTest.list" >> $GITHUB_ENV
          echo "NobyDa_AD_Block=https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block.txt" >> $GITHUB_ENV
          echo "NobyDa_AD_Block_Plus=https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block_Plus.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the default branch
        uses: actions/checkout@v2.3.4

      - name: Generate icloud.txt file
        run: |
          curl -sSL ${custom_icloud} | grep -E "^domain:" | awk -F ':' '{printf "DOMAIN-SUFFIX, %s, DIRECT\n", $2}' > icloud.txt
          curl -sSL ${custom_icloud} | grep -E "^full:" | awk -F ':' '{printf "DOMAIN, %s, DIRECT\n", $2}' >> icloud.txt

      - name: Generate google.txt file
        run: |
          curl -sSL ${felixonmars_google} | perl -ne '/^server=\/([^\/]+)\// && print "DOMAIN-SUFFIX, $1, DIRECT\n"' > google.txt

      - name: Generate apple.txt file
        run: |
          curl -sSL ${felixonmars_apple} | perl -ne '/^server=\/([^\/]+)\// && print "DOMAIN-SUFFIX, $1, DIRECT\n"' > apple.txt

      - name: Generate direct.txt file
        run: |
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^USER-AGENT," | awk -F ',' '{printf "USER-AGENT, %s, DIRECT\n", $2}' > direct.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, DIRECT\n", $2}' >> direct.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, DIRECT\n", $2}' >> direct.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, DIRECT\n", $2}' >> direct.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^IP-CIDR," | awk -F ',' '{printf "IP-CIDR, %s, DIRECT\n", $2}' >> direct.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^IP-CIDR6," | awk -F ',' '{printf "ip6-cidr, %s, DIRECT\n", $2}' >> direct.txt

          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^USER-AGENT," | awk -F ',' '{printf "USER-AGENT, %s, DIRECT\n", $2}' > tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^USER-AGENT," | awk -F ',' '{printf "USER-AGENT, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${lieber_direct} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX, $2, DIRECT\n"' >> tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${lieber_direct} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN, $2, DIRECT\n"' >> tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^IP-CIDR," | awk -F ',' '{printf "IP-CIDR, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^IP-CIDR," | awk -F ',' '{printf "IP-CIDR, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${all_direct} | grep -E "^IP-CIDR6," | awk -F ',' '{printf "ip6-cidr, %s, DIRECT\n", $2}' >> tempDirect.txt
          curl -sSL ${ACL4SSR_ChinaDomain} | grep -E "^IP-CIDR6," | awk -F ',' '{printf "ip6-cidr, %s, DIRECT\n", $2}' >> tempDirect.txt

          awk '!a[$0]++' tempDirect.txt > allDirect.txt

      - name: Generate proxy.txt file
        run: |
          curl -sSL ${lieber_proxy} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX, $2, proxy\n"' > proxy.txt
          curl -sSL ${lieber_proxy} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN, $2, proxy\n"' >> proxy.txt

      - name: Generate reject.txt file
        run: |
          curl -sSL ${acl2ssr_banad} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' > temp_reject.txt
          curl -sSL ${acl2ssr_BanProgramAD} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyList} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyListChina} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyPrivacy} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRule} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRuleTest} | grep -E "^DOMAIN-KEYWORD," | awk -F ',' '{printf "DOMAIN-KEYWORD, %s, REJECT\n", $2}' >> temp_reject.txt

          curl -sSL ${lieber_reject} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX, $2, REJECT\n"' >> temp_reject.txt
          curl -sSL ${acl2ssr_banad} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanProgramAD} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyList} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyListChina} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyPrivacy} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${lieber_reject_anti} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRule} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRuleTest} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AD_Block} | grep -E "^DOMAIN-SUFFIX," | awk -F ',' '{printf "DOMAIN-SUFFIX, %s, REJECT\n", $2}' >> temp_reject.txt
          
          curl -sSL ${acl2ssr_BanProgramAD} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_banad} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyList} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyListChina} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${acl2ssr_BanEasyPrivacy} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRule} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AdRuleTest} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt
          curl -sSL ${NobyDa_AD_Block_Plus} | grep -E "^DOMAIN," | awk -F ',' '{printf "DOMAIN, %s, REJECT\n", $2}' >> temp_reject.txt

          awk '!a[$0]++' temp_reject.txt > reject.txt

      - name: Generate private.txt file
        run: |
          curl -sSL ${custom_private} | awk -F ':' '/^domain:/ {printf "DOMAIN-SUFFIX, %s, DIRECT\n", $2}' > private.txt
          curl -sSL ${custom_private} | awk -F ':' '/^full:/ {printf "DOMAIN, %s, DIRECT\n", $2}' >> private.txt

      - name: Generate gfw.txt file
        run: |
          curl -sSL ${lieber_gfw} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX, $2, proxy\n"' > gfw.txt

      - name: Generate greatfire.txt file
        run: |
          curl -sSL ${lieber_greatfire} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX, $2, proxy\n"' > greatfire.txt

      - name: Generate tld-not-cn.txt file
        run: |
          curl -sSL ${custom_tld_not_cn} | grep -E "^domain:" | awk -F ':' '{printf "DOMAIN-SUFFIX, %s, proxy\n", $2}' > tld-not-cn.txt

      - name: Generate cncidr.txt file
        run: |
          curl -sSL ${ipipnet_chinaiplist} | perl -ne '/^(\d{1,3}(\.\d{1,3}){3}\/\d{1,2})/ && print "IP-CIDR, $1, DIRECT\n"' > cncidr.txt

      - name: Generate telegramcidr.txt file
        run: |
          cp parts/telegram_ips.txt telegramcidr.txt
          curl -sSL ${telegram_cidr} | perl -ne '/^(\d{1,3}(\.\d{1,3}){3}\/\d{1,2})/ && print "IP-CIDR, $1, proxy\n"' >> telegramcidr.txt
          curl -sSL ${telegram_cidr} | grep ":" | perl -ne '/(.+\/\d+)/ && print "ip6-cidr, $1, proxy\n"' >> telegramcidr.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          install -p {apple,icloud,google,proxy,direct,reject,private,gfw,greatfire,tld-not-cn,cncidr,telegramcidr,allDirect}.txt ./publish/

      - name: Git push assets to "release" branch
        run: |
          cd publish
          git init
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge CDN Cache
        run: curl -sSL  ${{ secrets.PURGE_URL }}